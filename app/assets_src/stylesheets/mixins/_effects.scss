
//@mixin translucent-background($color: #fff, $alpha: 1) {
//  background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
	// IE 8
//  $ie-hex-str: ie-hex-str(rgba($color, $alpha));
//  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
//  zoom: 1;
//}

//@mixin translucent-border($color: #fff, $alpha: 1) {
//  border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
//  background-clip: padding-box;
//}

@mixin inner-border($width, $color) {
	@include box-shadow(0px 0px 0px $width $color inset);
}

@mixin outer-border($width, $color) {
	@include box-shadow(0px 0px 0px $width $color);
}

// Use to override another arrow
@mixin _caret($size, $color, $dir: down) {
	@if $dir == up {
    border-bottom: $size solid $color;
  } @else if $dir == left {
    border-right: $size solid $color;
  } @else if $dir == right {
    border-left: $size solid $color;
  } @else {
    border-top: $size solid $color;
  }
}

@mixin caret($size, $color, $dir: down) {
	content: '';
	display: inline-block;
	@include dimensions(0);
	border-top: $size solid transparent;
	border-left: $size solid transparent;
	border-right: $size solid transparent;
	border-bottom: $size solid transparent;
	@include _caret($size, $color, $dir);
}

// Alias for caret
@mixin arrow($size, $color, $dir) {
  @include caret($size, $color, $dir);
}

// Popover arrows
// TODO: This could also be done using a 45 degree rotation
@mixin popover-arrow($size, $color, $borderColor, $dir: up, $position: 50%, $offset: 0) {
  // Note: $offset should NOT count the border
  $totalOffset: $offset + (2 * $size);
  $arrowPosition: 0 - $totalOffset - 1px;
  $bgPosition: 0 - $totalOffset;

  &:before, &:after {
    position: absolute;
    @if ($dir == up) or ($dir == down) {
      left: $position;
    } @else {
      top: $position;
    }
  }
  // Border
  &:before {
    @include caret($size, $borderColor, $dir);
 // @if      ($dir == right)  { left: $totalOffset + 1px; right: auto; }
    @if      ($dir == right)  { right: $arrowPosition; left: auto; }
    @else if ($dir == left)   { left: $arrowPosition; right: auto; }
 // @else if ($dir == down)   { top: $totalOffset + 1px; }
    @else if ($dir == down)   { bottom: $arrowPosition; top: auto; }
    @else                     { top: $arrowPosition; bottom: auto; }
  }
  // Background
  &:after {
    @include caret($size, $color, $dir);
 // @if      ($dir == right)  { left: $totalOffset; }
    @if      ($dir == right)  { right: $bgPosition; left: auto; }
    @else if ($dir == left)   { left: $bgPosition; right: auto; }
 // @else if ($dir == down)   { top: $totalOffset; }
    @else if ($dir == down)   { bottom: $bgPosition; top: auto; }
    @else                     { top: $bgPosition; bottom: auto; }
  }
}

// Source: Boostrap
// Webkit-style focus
@mixin tab-focus() {
  outline: thin dotted #333; 										// Default
  outline: 4px auto -webkit-focus-ring-color;   // Webkit
  outline-offset: -2px;
}

// Source: Boostrap
// Dividers (basically an hr) within dropdowns and nav lists
@mixin nav-divider($top, $bottom: transparent) {
  // IE7 needs a set width since we gave a height. Restricting just
  // to IE7 to keep the 1px left/right space in other browsers.
  // It is unclear where IE is getting the extra space that we need
  // to negative-margin away, but so it goes.
  *width: 100%;
  height: 1px;
  margin-top: baseHeights(0.5);
  margin-bottom: baseHeights(0.5) - 1px;
  //margin: (($baseHeight / 2) - 1) 1px; // 8px 1px
  //*margin: -5px 0 5px;
  overflow: hidden;
  background-color: $top;
  @if ($bottom != transparent) {
    border-bottom: 1px solid $bottom;
  }
}
